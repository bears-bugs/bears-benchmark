##
## Licensed to the Apache Software Foundation (ASF) under one
## or more contributor license agreements.  See the NOTICE file
## distributed with this work for additional information
## regarding copyright ownership.  The ASF licenses this file
## to you under the Apache License, Version 2.0 (the
## "License"); you may not use this file except in compliance
## with the License.  You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing,
## software distributed under the License is distributed on an
## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
## KIND, either express or implied.  See the License for the
## specific language governing permissions and limitations
## under the License
##

# See the qdrouterd.conf (5) manual page for information about this
# file's format and options.

router {
    mode: interior
    id: Router.${HOSTNAME}
    workerThreads: ${WORKER_THREADS}
    defaultDistribution: unavailable
}

sslProfile {
    name: auth_service_ssl
    certDb: /etc/qpid-dispatch/authservice-ca/tls.crt
}

authServicePlugin {
    name: auth_service
    authService: ${AUTHENTICATION_SERVICE_HOST}:${AUTHENTICATION_SERVICE_PORT}
    saslInitHostname: ${AUTHENTICATION_SERVICE_SASL_INIT_HOST}
    authSslProfile: auth_service_ssl
}

listener {
    host: 0.0.0.0
    port: 5672
    saslPlugin: auth_service
    linkCapacity: ${LINK_CAPACITY}
}

listener {
    host: ${MY_IP_ADDR}
    port: 55672
    role: inter-router
    authenticatePeer: yes
    sslProfile: ssl_internal_details
    saslMechanisms: EXTERNAL
}

sslProfile {
   name: ssl_details
   certFile: /etc/qpid-dispatch/ssl/tls.crt
   keyFile: /etc/qpid-dispatch/ssl/tls.key
}

listener {
    host: 0.0.0.0
    port: 5671
    saslPlugin: auth_service
    sslProfile: ssl_details
    requireSsl: true
}

sslProfile {
   name: ssl_internal_details
   certFile: /etc/enmasse-certs/tls.crt
   keyFile: /etc/enmasse-certs/tls.key
   certDb: /etc/enmasse-certs/ca.crt
}

listener {
    host: 0.0.0.0
    port: 55671
    sslProfile: ssl_internal_details
    saslMechanisms: EXTERNAL
    authenticatePeer: yes
}

listener {
    host: 0.0.0.0
    port: 56671
    sslProfile: ssl_internal_details
    saslMechanisms: EXTERNAL
    role: route-container
    authenticatePeer: yes
}

connector {
    host: ${RAGENT_SERVICE_HOST}
    port: ${RAGENT_SERVICE_PORT}
    sslProfile: ssl_internal_details
    verifyHostName: no
}

linkRoute {
    name: override.lwt_in
    prefix: ${DOLLAR}lwt
    dir: in
    containerId: lwt-service
}

linkRoute {
    name: override.lwt_out
    prefix: ${DOLLAR}lwt
    dir: out
    containerId: lwt-service
}

address {
    name: override.mqtt
    prefix: ${DOLLAR}mqtt
    distribution: balanced
}

address {
    name: override.subctrl
    prefix: ${DOLLAR}subctrl
    distribution: balanced
}

address {
    name: override.temp
    prefix: ${DOLLAR}temp
    distribution: balanced
}
