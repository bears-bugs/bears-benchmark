<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/user/bin/64/debug/MODULE_TU_d /home/user/code/modules/MODULE/cppunit_output_dbg.xml</line>
</preamble>

<pid>20112</pid>
<ppid>20111</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/user/code/modules/MODULE/valgrind_output.xml</arg>
  </vargv>
  <argv>
    <exe>/home/user/bin/64/debug/MODULE_TU_d</exe>
    <arg>/home/user/code/modules/MODULE/cppunit_output_dbg.xml</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.277 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>InvalidWrite</kind>
  <what>Invalid write of size 4</what>
  <stack>
    <frame>
      <ip>0x511DF59</ip>
      <obj>/home/user/bin/64/debug/libMODULE_d.so.1.0.0</obj>
      <fn>ns::Clazz::method(float)</fn>
      <dir>/home/user/code/modules/MODULE/src/MODULE</dir>
      <file>Clazz.cpp</file>
      <line>114</line>
    </frame>
    <frame>
      <ip>0x427181</ip>
      <obj>/home/user/bin/64/debug/MODULE_TU_d</obj>
      <fn>_Clazz::method(float)</fn>
      <dir>/home/user/code/tu/MODULE_TU/include/MODULE_TU</dir>
      <file>ClazzTest.h</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x427847</ip>
      <obj>/home/user/bin/64/debug/MODULE_TU_d</obj>
      <fn>ClazzTest::method()</fn>
      <dir>/home/user/code/tu/MODULE_TU/include/MODULE_TU</dir>
      <file>ClazzTest.h</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x4296D3</ip>
      <obj>/home/user/bin/64/debug/MODULE_TU_d</obj>
      <fn>CppUnit::TestCaller&lt;ClazzTest&gt;::runTest()</fn>
      <dir>/home/user/code/externals/ThirdParty/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x4EA97B5</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestCase.cpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x4E9AB98</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>DefaultProtector.cpp</file>
      <line>15</line>
    </frame>
    <frame>
      <ip>0x4EA43F6</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>ProtectorChain.cpp</file>
      <line>20</line>
    </frame>
    <frame>
      <ip>0x4EA4286</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>ProtectorChain.cpp</file>
      <line>77</line>
    </frame>
    <frame>
      <ip>0x4EB5602</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestResult.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x4EA9226</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestCase.cpp</file>
      <line>92</line>
    </frame>
    <frame>
      <ip>0x4EA9E85</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestComposite.cpp</file>
      <line>64</line>
    </frame>
    <frame>
      <ip>0x4EA9D07</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestComposite::run(CppUnit::TestResult*)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestComposite.cpp</file>
      <line>23</line>
    </frame>
  </stack>
  <auxwhat>Address 0xd820468 is 0 bytes after a block of size 40 alloc'd</auxwhat>
  <stack>
    <frame>
      <ip>0x4C2E80F</ip>
      <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x511DF1A</ip>
      <obj>/home/user/bin/64/debug/libMODULE_d.so.1.0.0</obj>
      <fn>ns::Clazz::method(float)</fn>
      <dir>/home/user/code/modules/MODULE/src/MODULE</dir>
      <file>Clazz.cpp</file>
      <line>110</line>
    </frame>
    <frame>
      <ip>0x427181</ip>
      <obj>/home/user/bin/64/debug/MODULE_TU_d</obj>
      <fn>_Clazz::method(float)</fn>
      <dir>/home/user/code/tu/MODULE_TU/include/MODULE_TU</dir>
      <file>ClazzTest.h</file>
      <line>12</line>
    </frame>
    <frame>
      <ip>0x427847</ip>
      <obj>/home/user/bin/64/debug/MODULE_TU_d</obj>
      <fn>ClazzTest::method()</fn>
      <dir>/home/user/code/tu/MODULE_TU/include/MODULE_TU</dir>
      <file>ClazzTest.h</file>
      <line>31</line>
    </frame>
    <frame>
      <ip>0x4296D3</ip>
      <obj>/home/user/bin/64/debug/MODULE_TU_d</obj>
      <fn>CppUnit::TestCaller&lt;ClazzTest&gt;::runTest()</fn>
      <dir>/home/user/code/externals/ThirdParty/include/cppunit</dir>
      <file>TestCaller.h</file>
      <line>166</line>
    </frame>
    <frame>
      <ip>0x4EA97B5</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestCaseMethodFunctor::operator()() const</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestCase.cpp</file>
      <line>32</line>
    </frame>
    <frame>
      <ip>0x4E9AB98</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::DefaultProtector::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>DefaultProtector.cpp</file>
      <line>15</line>
    </frame>
    <frame>
      <ip>0x4EA43F6</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::ProtectorChain::ProtectFunctor::operator()() const</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>ProtectorChain.cpp</file>
      <line>20</line>
    </frame>
    <frame>
      <ip>0x4EA4286</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::ProtectorChain::protect(CppUnit::Functor const&amp;, CppUnit::ProtectorContext const&amp;)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>ProtectorChain.cpp</file>
      <line>77</line>
    </frame>
    <frame>
      <ip>0x4EB5602</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestResult::protect(CppUnit::Functor const&amp;, CppUnit::Test*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestResult.cpp</file>
      <line>178</line>
    </frame>
    <frame>
      <ip>0x4EA9226</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestCase::run(CppUnit::TestResult*)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestCase.cpp</file>
      <line>92</line>
    </frame>
    <frame>
      <ip>0x4EA9E85</ip>
      <obj>/home/user/bin/64/debug/libcppunit_d.so.1.12.1</obj>
      <fn>CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*)</fn>
      <dir>/home/user/code/externals/ThirdParty/cppunit/sources/src/cppunit</dir>
      <file>TestComposite.cpp</file>
      <line>64</line>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:04.967 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>
