<rules>
  <rule> 
    <key>CustomRuleTemplate</key>
    <cardinality>MULTIPLE</cardinality>
    <name><![CDATA[Template for custom Custom rules]]></name>
    <description>
      <![CDATA[
<p>
Follow these steps to make your custom Custom rules available in SonarQube:
</p>

<ol>
  <ol>
    <li>Create a new rule in SonarQube by "copying" this rule template and specify the <code>CheckId</code> of your custom rule, a title, a description, and a default severity.</li>
    <li>Enable the newly created rule in your quality profile</li>
  </ol>
  <li>Relaunch an analysis on your projects, et voil√†, your custom rules are executed!</li>
</ol>
      ]]>
    </description>
    <severity>MAJOR</severity>
  </rule>
  <rule>
    <key>drand48</key>
    <name>drand48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>drand48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>erand48</key>
    <name>erand48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>erand48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>initstate</key>
    <name>initstate</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>initstate</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>jrand48</key>
    <name>jrand48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>jrand48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lcong48</key>
    <name>lcong48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>lcong48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lrand48</key>
    <name>lrand48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>lrand48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>mrand48</key>
    <name>mrand48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>mrand48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>nrand48</key>
    <name>nrand48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>nrand48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>random</key>
    <name>random</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>random</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>seed48</key>
    <name>seed48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>seed48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>setstate</key>
    <name>setstate</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>setstate</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>srand</key>
    <name>srand</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <severity>MAJOR</severity>
    <internalKey>srand</internalKey>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>srand48</key>
    <name>srand48</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>srand48</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strfry</key>
    <name>strfry</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>strfry</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>memfrob</key>
    <name>memfrob</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>memfrob</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>crypt</key>
    <name>crypt</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>crypt</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>srandom</key>
    <name>srandom</name>
    <description>
      Standard random number generators should not be used to generate
      randomness used for security reasons. For security sensitive
      randomness a cryptographic randomness generator that provides
      sufficient entropy should be used.
    </description>
    <tag>security</tag>
    <internalKey>srandom</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>memcpy</key>
    <name>memcpy</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>memcpy</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>fixed size global buffer</key>
    <name>fixed size global buffer</name>
    <description>
      Extra care should be taken to ensure that character arrays that
      are allocated on the stack are used safely. They are prime targets
      for buffer overflow attacks.
    </description>
    <tag>security</tag>
    <internalKey>fixed size global buffer</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>fixed size local buffer</key>
    <name>fixed size local buffer</name>
    <description>
      A potential race condition vulnerability exists here. Normally
      a call to this function is vulnerable only when a match check precedes
      it. No check was detected, however one could still exist that could
      not be detected.
    </description>
    <tag>security</tag>
    <internalKey>fixed size local buffer</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strncpy</key>
    <name>strncpy</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string. Also, consider using strlcpy() instead, if
      it is available to you.
    </description>
    <tag>security</tag>
    <internalKey>strncpy</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>chroot</key>
    <name>chroot</name>
    <description>
      Do not forget to chdir() to an appropriate directory before
      calling chroot()!
    </description>
    <tag>security</tag>
    <internalKey>chroot</internalKey>
    <severity>INFO</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>gets</key>
    <name>gets</name>
    <description>
      Gets is unsafe!! No bounds checking is performed, buffer is
      easily overflowable by user. Use fgets(buf, size, stdin) instead.
    </description>
    <tag>security</tag>
    <internalKey>gets</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>system</key>
    <name>system</name>
    <description>
      Argument 1 to this function call should be checked to ensure
      that it does not come from an untrusted source without first verifying
      that it contains nothing dangerous.
    </description>
    <tag>security</tag>
    <internalKey>system</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>popen</key>
    <name>popen</name>
    <description>
      Argument 1 to this function call should be checked to ensure
      that it does not come from an untrusted source without first verifying
      that it contains nothing dangerous.
    </description>
    <tag>security</tag>
    <internalKey>popen</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>getenv</key>
    <name>getenv</name>
    <description>
      Environment variables are highly untrustable input. They may be
      of any length, and contain any data. Do not make any assumptions
      regarding content or length. If at all possible avoid using them, and
      if it is necessary, sanitize them and truncate them to a reasonable
      length.
    </description>
    <tag>security</tag>
    <internalKey>getenv</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>printf</key>
    <name>printf</name>
    <description>
      Check to be sure that the non-constant format string passed as
      argument 1 to this function call does not come from an untrusted
      source that could have added formatting characters that the code is
      not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>printf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>sprintf</key>
    <name>sprintf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>sprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wsprintf</key>
    <name>wsprintf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>wsprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wsprintfA</key>
    <name>wsprintfA</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>wsprintfA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wsprintfW</key>
    <name>wsprintfW</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>wsprintfW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_snprintf</key>
    <name>_snprintf</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_snprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_snwprintf</key>
    <name>_snwprintf</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_snwprintf</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lstrcpy</key>
    <name>lstrcpy</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>lstrcpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lstrcpyA</key>
    <name>lstrcpyA</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>lstrcpyA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lstrcpyW</key>
    <name>lstrcpyW</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>lstrcpyW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wcscpy</key>
    <name>wcscpy</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>wcscpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_mbscpy</key>
    <name>_mbscpy</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_mbscpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tcscpy</key>
    <name>_tcscpy</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_tcscpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCpy</key>
    <name>StrCpy</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>StrCpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCpyA</key>
    <name>StrCpyA</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>StrCpyA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCpyW</key>
    <name>StrCpyW</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>StrCpyW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lstrcat</key>
    <name>lstrcat</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>lstrcat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wcscat</key>
    <name>wcscat</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>wcscat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_mbscat</key>
    <name>_mbscat</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_mbscat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tcscat</key>
    <name>_tcscat</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_tcscat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCat</key>
    <name>StrCat</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <severity>MAJOR</severity>
    <internalKey>StrCat</internalKey>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCatA</key>
    <name>StrCatA</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>StrCatA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCatW</key>
    <name>StrCatW</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>StrCatW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strxfrm</key>
    <name>strxfrm</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>strxfrm</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wcsxfrm</key>
    <name>wcsxfrm</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>wcsxfrm</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tcsxfrm</key>
    <name>_tcsxfrm</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_tcsxfrm</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lstrcpyn</key>
    <name>lstrcpyn</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>lstrcpyn</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCpyN</key>
    <name>StrCpyN</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCpyN</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCpyNA</key>
    <name>StrCpyNA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCpyNA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCpyNW</key>
    <name>StrCpyNW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCpyNW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lstrcpynW</key>
    <name>lstrcpynW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>lstrcpynW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wcsncpy</key>
    <name>wcsncpy</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>wcsncpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_mbsncpy</key>
    <name>_mbsncpy</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_mbsncpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tcsncpy</key>
    <name>_tcsncpy</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_tcsncpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_mbsnbcat</key>
    <name>_mbsnbcat</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_mbsnbcat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wcsncat</key>
    <name>wcsncat</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <severity>MAJOR</severity>
    <internalKey>wcsncat</internalKey>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tcsncat</key>
    <name>_tcnscat</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_tcnscat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>MultiByteToWideChar</key>
    <name>MultiByteToWideChar</name>
    <description>
      The last argument is the number of wide chars, not the number of
      bytes. Getting this wrong can cause a buffer overflow since you will
      indicate that the buffer is twice the size it actually is. Don't
      forget about NULL termination.
    </description>
    <tag>security</tag>
    <internalKey>MultiByteToWideChar</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>WideCharToMultiByte</key>
    <name>WideCharToMultiByte</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>WideCharToMultiByte</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strncat</key>
    <name>strncat</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrNCat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrNCat</key>
    <name>StrNCat</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrNCat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCatBuff</key>
    <name>StrCatBuff</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCatBuff</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCatBuffA</key>
    <name>StrCatBuffA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCatBuffA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCatBuffW</key>
    <name>StrCatBuffW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCatBuffW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCatN</key>
    <name>StrCatN</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCatN</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCatNA</key>
    <name>StrCatNA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCatNA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrCatNW</key>
    <name>StrCatNW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrCatNW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatByteSize</key>
    <name>StrFormatByteSize</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatByteSize</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatByteSizeA</key>
    <name>StrFormatByteSizeA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatByteSizeA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatByteSizeW</key>
    <name>StrFormatByteSizeW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatByteSizeW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatByteSize64</key>
    <name>StrFormatByteSize64</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatByteSize64</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatByteSize64A</key>
    <name>StrFormatByteSize64A</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatByteSize64A</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatByteSize64W</key>
    <name>StrFormatByteSize64W</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatByteSize64W</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatKBSize</key>
    <name>StrFormatKBSize</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatKBSize</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatKBSizeA</key>
    <name>StrFormatKBSizeA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatKBSizeA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFormatKBSizeW</key>
    <name>StrFormatKBSizeW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFormatKBSizeW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFromTimeInterval</key>
    <name>StrFromTimeInterval</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFromTimeInterval</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFromTimeIntervalA</key>
    <name>StrFromTimeIntervalA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFromTimeIntervalA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>StrFromTimeIntervalW</key>
    <name>StrFromTimeIntervalW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>StrFromTimeIntervalW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wvnsprintf</key>
    <name>wvnsprintf</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>wvnsprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wvnsprintfA</key>
    <name>wvnsprintfA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>wvnsprintfA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wvnsprintfW</key>
    <name>wvnsprintfW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>wvnsprintfW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wnsprintf</key>
    <name>wnsprintf</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>wnsprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wnsprintfA</key>
    <name>wnsprintfA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>wnsprintfA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wnsprintfW</key>
    <name>wnsprintfW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>wnsprintfW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAddExtension</key>
    <name>PathAddExtension</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAddExtension</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAddExtensionA</key>
    <name>PathAddExtensionA</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAddExtensionA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAddExtensionW</key>
    <name>PathAddExtensionW</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAddExtensionW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAddBackslash</key>
    <name>PathAddBackslash</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAddBackslash</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAddBackslashA</key>
    <name>PathAddBackslashA</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAddBackslashA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAddBackslashW</key>
    <name>PathAddBackslashW</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAddBackslashW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAppend</key>
    <name>PathAppend</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAppend</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAppendA</key>
    <name>PathAppendA</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAppendA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathAppendW</key>
    <name>PathAppendW</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathAppendW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathCanonicalize</key>
    <name>PathCanonicalize</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathCanonicalize</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathCanonicalizeA</key>
    <name>PathCanonicalizeA</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathCanonicalizeA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathCanonicalizeW</key>
    <name>PathCanonicalizeW</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathCanonicalizeW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathCombine</key>
    <name>PathCombine</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathCombine</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathCombineA</key>
    <name>PathCombineA</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathCombineA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>PathCombineW</key>
    <name>PathCombineW</name>
    <description>
      Buffer size must be _MAX_PATH+1 or larger for this function to
      be safe.
    </description>
    <tag>security</tag>
    <internalKey>PathCombineW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>LoadLibrary</key>
    <name>LoadLibrary</name>
    <description>
      LoadLibrary will search several places for a library if no path
      is specified, allowing trojan DLL's to be inserted elsewhere even if
      the intended DLL is correctly protected from overwriting. Make sure to
      specify the full path.
    </description>
    <tag>security</tag>
    <internalKey>LoadLibrary</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>LoadLibraryA</key>
    <name>LoadLibraryA</name>
    <description>
      LoadLibrary will search several places for a library if no path
      is specified, allowing trojan DLL's to be inserted elsewhere even if
      the intended DLL is correctly protected from overwriting. Make sure to
      specify the full path.
    </description>
    <tag>security</tag>
    <internalKey>LoadLibraryA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>LoadLibraryW</key>
    <name>LoadLibraryW</name>
    <description>
      LoadLibrary will search several places for a library if no path
      is specified, allowing trojan DLL's to be inserted elsewhere even if
      the intended DLL is correctly protected from overwriting. Make sure to
      specify the full path.
    </description>
    <tag>security</tag>
    <internalKey>LoadLibraryW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>GetExtensionVersion</key>
    <name>GetExtensionVersion</name>
    <description>
      GetExtensionVersion() is called by IIS in the system's security
      context. Be very careful what you do here, as you are basically suid
      root for the machine. If you are calling the function rather than
      implementing it, how about *not* calling it in the system's security
      context if possible?
    </description>
    <tag>security</tag>
    <internalKey>GetExtensionVersion</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToChar</key>
    <name>OemToChar</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>OemToChar</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToCharA</key>
    <name>OemToCharA</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>OemToCharA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToCharW</key>
    <name>OemToCharW</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>OemToCharW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToCharBuff</key>
    <name>OemToCharBuff</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>OemToCharBuff</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToCharBuffA</key>
    <name>OemToCharBuffA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>OemToCharBuffA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToCharBuffW</key>
    <name>OemToCharBuffW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>OemToCharBuffW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToAnsi</key>
    <name>OemToAnsi</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>OemToAnsi</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToAnsiA</key>
    <name>OemToAnsiA</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>OemToAnsiA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToAnsiW</key>
    <name>OemToAnsiW</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>OemToAnsiW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToAnsiBuff</key>
    <name>OemToAnsiBuff</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>OemToAnsiBuff</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToAnsiBuffA</key>
    <name>OemToAnsiBuffA</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>OemToAnsiBuffA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>OemToAnsiBuffW</key>
    <name>OemToAnsiBuffW</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>OemToAnsiBuffW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>GetTempPath</key>
    <name>GetTempPath</name>
    <description>
      GetTempPath() may return the current directory or the windows
      directory. Be careful what you place in these locations. Important
      files may be overwritten, and trojan DLL's may be dropped in these
      locations. Never use a user-input file name when writing to a location
      given by GetTempPath().
    </description>
    <tag>security</tag>
    <internalKey>GetTempPath</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>GetTempPathA</key>
    <name>GetTempPathA</name>
    <description>
      GetTempPath() may return the current directory or the windows
      directory. Be careful what you place in these locations. Important
      files may be overwritten, and trojan DLL's may be dropped in these
      locations. Never use a user-input file name when writing to a location
      given by GetTempPath().
    </description>
    <tag>security</tag>
    <internalKey>GetTempPathA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>GetTempPathW</key>
    <name>GetTempPathW</name>
    <description>
      GetTempPath() may return the current directory or the windows
      directory. Be careful what you place in these locations. Important
      files may be overwritten, and trojan DLL's may be dropped in these
      locations. Never use a user-input file name when writing to a location
      given by GetTempPath().
    </description>
    <tag>security</tag>
    <internalKey>GetTempPathW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>GetTempFileName</key>
    <name>GetTempFileName</name>
    <description>
      Many calls for generating temporary file names are insecure
      (susceptible to race conditions). Use a securely generated file name,
      for example, by pulling 64 bits of randomness from /dev/random, base
      64 encoding it and using that as a file suffix.
    </description>
    <tag>security</tag>
    <internalKey>GetTempFileName</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>GetTempFileNameA</key>
    <name>GetTempFileNameA</name>
    <description>
      Many calls for generating temporary file names are insecure
      (susceptible to race conditions). Use a securely generated file name,
      for example, by pulling 64 bits of randomness from /dev/random, base
      64 encoding it and using that as a file suffix.
    </description>
    <tag>security</tag>
    <internalKey>GetTempFileNameA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>GetTempFileNameW</key>
    <name>GetTempFileNameW</name>
    <description>
      Many calls for generating temporary file names are insecure
      (susceptible to race conditions). Use a securely generated file name,
      for example, by pulling 64 bits of randomness from /dev/random, base
      64 encoding it and using that as a file suffix.
    </description>
    <tag>security</tag>
    <internalKey>GetTempFileNameW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ShellExecute</key>
    <name>ShellExecute</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>ShellExecute</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ShellExecuteA</key>
    <name>ShellExecuteA</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>ShellExecuteA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ShellExecuteW</key>
    <name>ShellExecuteW</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>ShellExecuteW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ShellExecuteEx</key>
    <name>ShellExecuteEx</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>ShellExecuteEx</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ShellExecuteExA</key>
    <name>ShellExecuteExA</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>ShellExecuteExA</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ShellExecuteExW</key>
    <name>ShellExecuteExW</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>ShellExecuteExW</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wsystem</key>
    <name>_wsystem</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wsystem</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_texecl</key>
    <name>_texecl</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_texecl</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_execl</key>
    <name>_execl</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_execl</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wexecl</key>
    <name>_wexecl</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_wexecl</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_texecle</key>
    <name>_texecle</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_texecle</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_execle</key>
    <name>_execle</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_execle</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wexecle</key>
    <name>_wexecle</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_wexecle</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_texeclp</key>
    <name>_texeclp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_texeclp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_execlp</key>
    <name>_execlp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_execlp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wexeclp</key>
    <name>_wexeclp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wexeclp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_texeclpe</key>
    <name>_texeclpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_texeclpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_execlpe</key>
    <name>_execlpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_execlpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wexeclpe</key>
    <name>_wexeclpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wexeclpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_texecv</key>
    <name>_texecv</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_texecv</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_execv</key>
    <name>_execv</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_execv</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wexecv</key>
    <name>_wexecv</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_wexecv</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_texecve</key>
    <name>_texecve</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_texecve</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_execve</key>
    <name>_execve</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_execve</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wexecve</key>
    <name>_wexecve</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_wexecve</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_texecvp</key>
    <name>_texecvp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_texecvp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_execvp</key>
    <name>_execvp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_execvp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wexecvp</key>
    <name>_wexecvp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wexecvp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>


  <rule>
    <key>_texecvpe</key>
    <name>_texecvpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_texecvpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_execvpe</key>
    <name>_execvpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_execvpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wexecvpe</key>
    <name>_wexecvpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wexecvpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tspawnl</key>
    <name>_tspawnl</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_tspawnl</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_spawnl</key>
    <name>_spawnl</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_spawnl</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wspawnl</key>
    <name>_wspawnl</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_wspawnl</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_spawnle</key>
    <name>_spawnle</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_spawnle</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wspawnle</key>
    <name>_wspawnle</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_wspawnle</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tspawnlp</key>
    <name>_tspawnlp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_tspawnlp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_spawnlp</key>
    <name>_spawnlp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_spawnlp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wspawnlp</key>
    <name>_wspawnlp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wspawnlp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tspawnlpe</key>
    <name>_tspawnlpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_tspawnlpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_spawnlpe</key>
    <name>_spawnlpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_spawnlpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wspawnlpe</key>
    <name>_wspawnlpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wspawnlpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tspawnv</key>
    <name>_tspawnv</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_tspawnv</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_spawnv</key>
    <name>_spawnv</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_spawnv</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wspawnv</key>
    <name>_wspawnv</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_wspawnv</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tspawnve</key>
    <name>_tspawnve</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_tspawnve</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_spawnve</key>
    <name>_spawnve</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_spawnve</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wspawnve</key>
    <name>_wspawnve</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_wspawnve</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tspawnle</key>
    <name>_tspawnle</name>
    <description>
      While this _exec variant does not search the path for a program
      (good!), it will run .com files before .exe files and the like. Make
      sure to specify a file extension.
    </description>
    <tag>security</tag>
    <internalKey>_tspawnle</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tspawnvp</key>
    <name>_tspawnvp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_tspawnvp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_spawnvp</key>
    <name>_spawnvp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_spawnvp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wspawnvp</key>
    <name>_wspawnvp</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wspawnvp</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tspawnvpe</key>
    <name>_tspawnvpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_tspawnvpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_spawnvpe</key>
    <name>_spawnvpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_spawnvpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_wspawnvpe</key>
    <name>_wspawnvpe</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>_wspawnvpe</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>scanf</key>
    <name>scanf</name>
    <description>
      Check to be sure that the format string passed as argument 1 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>scanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>sscanf</key>
    <name>sscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>sscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>swscanf</key>
    <name>swscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>sscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>fscanf</key>
    <name>fscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>fscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>vfscanf</key>
    <name>vfscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>vfscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>vsprintf</key>
    <name>vsprintf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>vsprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>vscanf</key>
    <name>vscanf</name>
    <description>
      Check to be sure that the format string passed as argument 1 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>vscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>vsscanf</key>
    <name>vsscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>vsscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>streadd</key>
    <name>streadd</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>streadd</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strecpy</key>
    <name>strecpy</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>strecpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strtrns</key>
    <name>strtrns</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>strtrns</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>realpath</key>
    <name>realpath</name>
    <description>
      Be sure the destination buffer is at least MAXPATHLEN big. This
      function may still internally overflow a static buffer, try to avoid
      using it. If you must, check the size the path your pass in is no
      longer than MAXPATHLEN.
    </description>
    <tag>security</tag>
    <internalKey>realpath</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>syslog</key>
    <name>syslog</name>
    <description>
      Truncate all input strings to a reasonable length before passing
      them to this function.
    </description>
    <tag>security</tag>
    <internalKey>syslog</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>getopt</key>
    <name>getopt</name>
    <description>
      Truncate all input strings to a reasonable length before passing
      them to this function.
    </description>
    <tag>security</tag>
    <internalKey>getopt</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>getopt_long</key>
    <name>getopt_long</name>
    <description>
      Truncate all input strings to a reasonable length before passing
      them to this function.
    </description>
    <tag>security</tag>
    <internalKey>getopt_long</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>getpass</key>
    <name>getpass</name>
    <description>
      Truncate all input strings to a reasonable length before passing
      them to this function.
    </description>
    <tag>security</tag>
    <internalKey>getpass</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>getchar</key>
    <name>getchar</name>
    <description>
      Check buffer boundaries if calling this function in a loop and
      make sure you are not in danger of writing past the allocated space.
    </description>
    <tag>security</tag>
    <internalKey>getchar</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>fgetc</key>
    <name>fgetc</name>
    <description>
      Check buffer boundaries if calling this function in a loop and
      make sure you are not in danger of writing past the allocated space.
    </description>
    <tag>security</tag>
    <internalKey>fgetc</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>getc</key>
    <name>getc</name>
    <description>
      Check buffer boundaries if calling this function in a loop and
      make sure you are not in danger of writing past the allocated space.
    </description>
    <tag>security</tag>
    <internalKey>getc</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>read</key>
    <name>read</name>
    <description>
      Check buffer boundaries if calling this function in a loop and
      make sure you are not in danger of writing past the allocated space.
    </description>
    <tag>security</tag>
    <internalKey>read</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>bcopy</key>
    <name>bcopy</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>bcopy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>fgets</key>
    <name>fgets</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>fgets</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>cin</key>
    <name>cin</name>
    <description>
      cin is unsafe. No bounds checking is performed. Buffer is
      easily overflowable by user.
    </description>
    <tag>security</tag>
    <internalKey>cin</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>snprintf</key>
    <name>snprintf</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>snprintf</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strccpy</key>
    <name>strccpy</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>strccpy</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strcadd</key>
    <name>strcadd</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>strcadd</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_vsnprintf</key>
    <name>_vsnprintf</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_vsnprintf</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>tmpfile</key>
    <name>tmpfile</name>
    <description>
      Many calls for generating temporary file names are insecure
      (susceptible to race conditions). Use a securely generated file name,
      for example, by pulling 64 bits of randomness from /dev/random, base
      64 encoding it and using that as a file suffix.
    </description>
    <tag>security</tag>
    <internalKey>tmpfile</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>tmpnam</key>
    <name>tmpnam</name>
    <description>
      Many calls for generating temporary file names are insecure
      (susceptible to race conditions). Use a securely generated file name,
      for example, by pulling 64 bits of randomness from /dev/random, base
      64 encoding it and using that as a file suffix.
    </description>
    <tag>security</tag>
    <internalKey>tmpnam</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>tempnam</key>
    <name>tempnam</name>
    <description>
      Many calls for generating temporary file names are insecure
      (susceptible to race conditions). Use a securely generated file name,
      for example, by pulling 64 bits of randomness from /dev/random, base
      64 encoding it and using that as a file suffix.
    </description>
    <tag>security</tag>
    <internalKey>tempnam</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>getlogin</key>
    <name>getlogin</name>
    <description>
      The results of this call are easy to forge.
    </description>
    <tag>security</tag>
    <internalKey>getlogin</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>cuserid</key>
    <name>cuserid</name>
    <description>
      This may be forgable. Whether it is or not, even the man page
      recommends against using this.
    </description>
    <tag>security</tag>
    <internalKey>cuserid</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ttyname</key>
    <name>ttyname</name>
    <description>
      The results are easy for an attacker to forge, and not reliable.
    </description>
    <tag>security</tag>
    <internalKey>ttyname</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>signal</key>
    <name>signal</name>
    <description>
      When setting signal handlers, do not use the same function to
      handle multiple signals. There exists the possibility a race condition
      will result if 2 or more different signals are sent to the process at
      nearly the same time. Also, when writing signal handlers, it is best
      to do as little as possible in them. The best strategy is to use the
      signal handler to set a flag, that another part of the program tests
      and performs the appropriate action(s) when it is set.
    </description>
    <tag>security</tag>
    <internalKey>signal</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>gethostbyname</key>
    <name>gethostbyname</name>
    <description>
      WDNS results can easily be forged by an attacker (or arbitrarily
      set to large values, etc), and should not be trusted.
    </description>
    <tag>security</tag>
    <internalKey>gethostbyname</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>gethostbyaddr</key>
    <name>gethostbyaddr</name>
    <description>
      WDNS results can easily be forged by an attacker (or arbitrarily
      set to large values, etc), and should not be trusted.
    </description>
    <tag>security</tag>
    <internalKey>gethostbyaddr</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>realloc</key>
    <name>realloc</name>
    <description>
      Don't use on memory intended to be secure, because the old
      structure will not be zeroed out.
    </description>
    <tag>security</tag>
    <internalKey>realloc</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>fork</key>
    <name>fork</name>
    <description>
      Remember that sensitive data get copied on fork. For example, a
      random number generator's internal state will get duplicated, and the
      child may start outputting identical number streams.
    </description>
    <tag>security</tag>
    <internalKey>fork</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>vfork</key>
    <name>vfork</name>
    <description>
      Some implementations may be broken. Additionally, Remember that
      sensitive data get copied on fork. For example, a random number
      generator's internal state will get duplicated, and the child may
      start outputting identical number streams. Use fork() instead.
    </description>
    <tag>security</tag>
    <internalKey>vfork</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_mbsnbcpy</key>
    <name>_mbsnbcpy</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>_mbsnbcpy</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>CopyMemory</key>
    <name>CopyMemory</name>
    <description>
      Double check that your buffer is as big as you specify. When
      using functions that accept a number n of bytes to copy, such as
      strncpy, be aware that if the destination buffer size = n it may not
      NULL-terminate the string.
    </description>
    <tag>security</tag>
    <internalKey>CopyMemory</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>strlen</key>
    <name>strlen</name>
    <description>
      This function does not properly handle non-NULL terminated
      strings. This does not result in exploitable code, but can lead to
      access violations.
    </description>
    <tag>security</tag>
    <internalKey>strlen</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_tcslen</key>
    <name>_tcslen</name>
    <description>
      This function does not properly handle non-NULL terminated
      strings. This does not result in exploitable code, but can lead to
      access violations.
    </description>
    <tag>security</tag>
    <internalKey>_tcslen</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_mbslen</key>
    <name>_mbslen</name>
    <description>
      This function does not properly handle non-NULL terminated
      strings. This does not result in exploitable code, but can lead to
      access violations.
    </description>
    <tag>security</tag>
    <internalKey>_mbslen</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>wcslen</key>
    <name>wcslen</name>
    <description>
      This function does not properly handle non-NULL terminated
      strings. This does not result in exploitable code, but can lead to
      access violations.
    </description>
    <tag>security</tag>
    <internalKey>wcslen</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>CreateProcess</key>
    <name>CreateProcess</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>CreateProcess</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>CreateProcessAsUser</key>
    <name>CreateProcessAsUser</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>CreateProcessAsUser</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>CreateProcessWithLogon</key>
    <name>CreateProcessWithLogon</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>CreateProcessWithLogon</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>WinExec</key>
    <name>WinExec</name>
    <description>
      Many program execution commands under Windows will search the
      path for a program if you do not explicitly specify a full path to the
      file. This can allow trojans to be executed instead. Also, be sure to
      specify a file extension, since otherwise multiple extensions will be
      tried by the operating system, providing another opportunity for
      trojans.
    </description>
    <tag>security</tag>
    <internalKey>WinExec</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>RpcImpersonateClient</key>
    <name>RpcImpersonateClient</name>
    <description>
      Impersonation functions return error codes when they fail.
      These error codes must be checked otherwise code could be run with
      extra privileges when an impersonation has failed.
    </description>
    <tag>security</tag>
    <internalKey>RpcImpersonateClient</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ImpersonateLoggedOnUser</key>
    <name>ImpersonateLoggedOnUser</name>
    <description>
      Impersonation functions return error codes when they fail.
      These error codes must be checked otherwise code could be run with
      extra privileges when an impersonation has failed.
    </description>
    <tag>security</tag>
    <internalKey>ImpersonateLoggedOnUser</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>CoImpersonateClient</key>
    <name>CoImpersonateClient</name>
    <description>
      Impersonation functions return error codes when they fail.
      These error codes must be checked otherwise code could be run with
      extra privileges when an impersonation has failed.
    </description>
    <tag>security</tag>
    <internalKey>CoImpersonateClient</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ImpersonateNamedPipeClient</key>
    <name>ImpersonateNamedPipeClient</name>
    <description>
      Impersonation functions return error codes when they fail.
      These error codes must be checked otherwise code could be run with
      extra privileges when an impersonation has failed.
    </description>
    <tag>security</tag>
    <internalKey>ImpersonateNamedPipeClient</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ImpersonateDdeClientWindow</key>
    <name>ImpersonateDdeClientWindow</name>
    <description>
      Impersonation functions return error codes when they fail.
      These error codes must be checked otherwise code could be run with
      extra privileges when an impersonation has failed.
    </description>
    <tag>security</tag>
    <internalKey>ImpersonateDdeClientWindow</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>ImpersonateSecurityContext</key>
    <name>ImpersonateSecurityContext</name>
    <description>
      Impersonation functions return error codes when they fail.
      These error codes must be checked otherwise code could be run with
      extra privileges when an impersonation has failed.
    </description>
    <tag>security</tag>
    <internalKey>ImpersonateSecurityContext</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>QuerySecurityContextToken</key>
    <name>QuerySecurityContextToken</name>
    <description>
      Impersonation functions return error codes when they fail.
      These error codes must be checked otherwise code could be run with
      extra privileges when an impersonation has failed.
    </description>
    <tag>security</tag>
    <internalKey>QuerySecurityContextToken</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>SetThreadToken</key>
    <name>SetThreadToken</name>
    <description>
      Impersonation functions return error codes when they fail.
      These error codes must be checked otherwise code could be run with
      extra privileges when an impersonation has failed.
    </description>
    <tag>security</tag>
    <internalKey>SetThreadToken</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>SetSecurityDescriptorDacl</key>
    <name>SetSecurityDescriptorDacl</name>
    <description>
      If the third argument, pDacl, is NULL there is no protection
      from attack. As an example, an attacker could set a Deny All to
      Everyone ACE on such an object.
    </description>
    <tag>security</tag>
    <internalKey>SetSecurityDescriptorDacl</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>AfxLoadLibrary</key>
    <name>AfxLoadLibrary</name>
    <description>
      LoadLibrary will search several places for a library if no path
      is specified, allowing trojan DLL's to be inserted elsewhere even if
      the intended DLL is correctly protected from overwriting. Make sure to
      specify the full path.
    </description>
    <tag>security</tag>
    <internalKey>AfxLoadLibrary</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>LoadLibraryEx</key>
    <name>LoadLibraryEx</name>
    <description>
      LoadLibrary will search several places for a library if no path
      is specified, allowing trojan DLL's to be inserted elsewhere even if
      the intended DLL is correctly protected from overwriting. Make sure to
      specify the full path.
    </description>
    <tag>security</tag>
    <internalKey>LoadLibraryEx</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>InitializeCriticalSection</key>
    <name>InitializeCriticalSection</name>
    <description>
      This function can throw exceptions in low memory conditions. Use
      InitialCriticalSectionAndSpinCount instead.
    </description>
    <tag>security</tag>
    <internalKey>InitializeCriticalSection</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>EnterCriticalSection</key>
    <name>EnterCriticalSection</name>
    <description>
      This function can throw exceptions in low memory conditions. Use
      InitialCriticalSectionAndSpinCount instead.
    </description>
    <tag>security</tag>
    <internalKey>EnterCriticalSection</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>catgets</key>
    <name>catgets</name>
    <description>
      Environment variables are highly untrustable input. They may be
      of any length, and contain any data. Do not make any assumptions
      regarding content or length. If at all possible avoid using them, and
      if it is necessary, sanitize them and truncate them to a reasonable
      length. catgets() can utilize the NLSPATH environment variable.
    </description>
    <tag>security</tag>
    <internalKey>catgets</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>gettext</key>
    <name>gettext</name>
    <description>
      Environment variables are highly untrustable input. They may be
      of any length, and contain any data. Do not make any assumptions
      regarding content or length. If at all possible avoid using them, and
      if it is necessary, sanitize them and truncate them to a reasonable
      length. catgets() can utilize the NLSPATH environment variable.
    </description>
    <tag>security</tag>
    <internalKey>gettext</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>umask</key>
    <name>umask</name>
    <description>
      umask() can easily be used to create files with unsafe
      privileges. It should be set to restrictive values.
    </description>
    <tag>security</tag>
    <internalKey>umask</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>AddAccessAllowedAce</key>
    <name>AddAccessAllowedAce</name>
    <description>
      This function does not set the inheritance bits in the Access
      Control Entry, making it vulnerable.
    </description>
    <tag>security</tag>
    <internalKey>AddAccessAllowedAce</internalKey>
    <severity>CRITICAL</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>access</key>
    <name>access</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The check should not be used to condition a
      file system call (such as fopen) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>access</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lstat</key>
    <name>lstat</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The check should not be used to condition a
      file system call (such as open) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>lstat</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>stat</key>
    <name>stat</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The check should not be used to condition a
      file system call (such as open) on the same resource.
      Prefer fstat() when possible
    </description>
    <tag>security</tag>
    <internalKey>stat</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>creat</key>
    <name>creat</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource. An
      application-specific sanity check should probably occur after the call
      if it needs to be secured.
    </description>
    <tag>security</tag>
    <internalKey>creat</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>mknod</key>
    <name>mknod</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource. An
      application-specific sanity check should probably occur after the call
      if it needs to be secured.
    </description>
    <tag>security</tag>
    <internalKey>mknod</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>mkfifo</key>
    <name>mkfifo</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource. An
      application-specific sanity check should probably occur after the call
      if it needs to be secured.
    </description>
    <tag>security</tag>
    <internalKey>mkfifo</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>pathconf</key>
    <name>pathconf</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource. An
      application-specific sanity check should probably occur after the call
      if it needs to be secured.
      Prefer the use of fpathconf() when possible.
    </description>
    <tag>security</tag>
    <internalKey>pathconf</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>opendir</key>
    <name>opendir</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource. An
      application-specific sanity check should probably occur after the call
      if it needs to be secured.
    </description>
    <tag>security</tag>
    <internalKey>opendir</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>dirname</key>
    <name>dirname</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource. An
      application-specific sanity check should probably occur after the call
      if it needs to be secured.
    </description>
    <tag>security</tag>
    <internalKey>dirname</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>basename</key>
    <name>basename</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource. An
      application-specific sanity check should probably occur after the call
      if it needs to be secured.
    </description>
    <tag>security</tag>
    <internalKey>basename</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>scandir</key>
    <name>scandir</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>scandir</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>fopen</key>
    <name>fopen</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>fopen</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>open</key>
    <name>open</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>open</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>chmod</key>
    <name>chmod</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
      Prefer the use of fchmod() when possible.
    </description>
    <tag>security</tag>
    <internalKey>chmod</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>chown</key>
    <name>chown</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
      Prefer the use of fchown() when possible.
    </description>
    <tag>security</tag>
    <internalKey>chown</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>chgrp</key>
    <name>chgrp</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>chgrp</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>rename</key>
    <name>rename</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>rename</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>mkdir</key>
    <name>mkdir</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>mkdir</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>mkdirp</key>
    <name>mkdirp</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>mkdirp</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>rmdirp</key>
    <name>rmdirp</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>rmdirp</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>rmdir</key>
    <name>rmdir</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>rmdir</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>remove</key>
    <name>remove</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>remove</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>unlink</key>
    <name>unlink</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>unlink</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>link</key>
    <name>link</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>link</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>lchown</key>
    <name>lchown</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>lchown</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>execve</key>
    <name>execve</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>execve</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>execl</key>
    <name>execl</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>execl</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>execlp</key>
    <name>execlp</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>execlp</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>execle</key>
    <name>execle</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>execle</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>execv</key>
    <name>execv</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>execv</internalKey>
     <severity>MINOR</severity>
   <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>execvp</key>
    <name>execvp</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>execvp</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>freopen</key>
    <name>freopen</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>freopen</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>mktemp</key>
    <name>mktemp</name>
    <description>
      The function can be part of a TOCTOU (Time of check to time of use)
      race condition. The call should not be conditional to a preceding
      file system check (such as stat) on the same resource.
    </description>
    <tag>security</tag>
    <internalKey>mktemp</internalKey>
    <severity>MINOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>fprintf</key>
    <name>fprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 2
      to this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>fprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>vfprintf</key>
    <name>vfprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 2
      to this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>vfprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>vprintf</key>
    <name>vprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 1
      to this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>vprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <!-- added from RATS 2.3 rats-c.xml -->
  <rule>
    <key>_ftprintf</key>
    <name>_ftprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 2 to
      this function call does not come from an untrusted source that could have added
      formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>_ftprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>_stscanf</key>
    <name>_stscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_stscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>swprintf</key>
    <name>swprintf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>swprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>_stprintf</key>
    <name>_stprintf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_stprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>_tprintf</key>
    <name>_tprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 1 to
      this function call does not come from an untrusted source that could have added
      formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>_tprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>wprintf</key>
    <name>wprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 1 to
      this function call does not come from an untrusted source that could have added
      formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>wprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>

  <rule>
    <key>_cprintf</key>
    <name>_cprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 1 to
      this function call does not come from an untrusted source that could have added
      formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>_cprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>_cscanf</key>
    <name>_cscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_cscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>_ftscanf</key>
    <name>_ftscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_ftscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>_vsnwprintf</key>
    <name>_vsnwprintf</name>
    <description>
      Double check that your buffer is as big as you specify. When using functions
      that accept a number n of bytes to copy, such as strncpy, be aware that if the
      dest buffer size = n it may not NULL-terminate the string."
    </description>
    <tag>security</tag>
    <internalKey>_vsnwprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>fwprintf</key>
    <name>fwprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 2 to
      this function call does not come from an untrusted source that could have added
      formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>fwprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>fwscanf</key>
    <name>fwscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>fwscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>getwd</key>
    <name>getwd</name>
    <description>
      Check to be sure that the format string passed as argument 1 to this function
      call does not come from an untrusted source that could have added formatting
      characters that the code is not prepared to handle.  Additionally, the format
      string could contain `%s' without precision that could result in a buffer overflow
    </description>
    <tag>security</tag>
    <internalKey>getwd</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>vfwprintf</key>
    <name>vfwprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 2
      to this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>vfwprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>vswprintf</key>
    <name>vswprintf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to this function
      call does not come from an untrusted source that could have added formatting
      characters that the code is not prepared to handle.  Additionally, the format
      string could contain `%s' without precision that could result in a buffer overflow
    </description>
    <tag>security</tag>
    <internalKey>vswprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>vwprintf</key>
    <name>vwprintf</name>
    <description>
      Check to be sure that the non-constant format string passed as argument 1
      to this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to handle.
    </description>
    <tag>security</tag>
    <internalKey>vwprintf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>wscanf</key>
    <name>wscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to this function
      call does not come from an untrusted source that could have added formatting
      characters that the code is not prepared to handle.  Additionally, the format
      string could contain `%s' without precision that could result in a buffer overflow
    </description>
    <tag>security</tag>
    <internalKey>wscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <!-- end of update from RATS 2.3 rats-c.xml -->
  
  <!-- added from RATS 2.4 rats-c.xml -->
  <rule>
    <key>strcpy</key>
    <name>strcpy</name>
    <description>
	  Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>strcpy</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>strcat</key>
    <name>strcat</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>strcat</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>recvmsg</key>
    <name>recvmsg</name>
    <description>
      Functions that is known input source, but not otherwise problem.
    </description>
    <tag>security</tag>
    <internalKey>recvmsg</internalKey>
    <severity>INFO</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>recvfrom</key>
    <name>recvfrom</name>
    <description>
      Functions that is known input source, but not otherwise problem.
    </description>
    <tag>security</tag>
    <internalKey>recvfrom</internalKey>
    <severity>INFO</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>recv</key>
    <name>recv</name>
    <description>
      Functions that is known input source, but not otherwise problem.
    </description>
    <tag>security</tag>
    <internalKey>recv</internalKey>
    <severity>INFO</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>readv</key>
    <name>readv</name>
    <description>
      Functions that is known input source, but not otherwise problem.
    </description>
    <tag>security</tag>
    <internalKey>readv</internalKey>
    <severity>INFO</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>readlink</key>
    <name>readlink</name>
    <description>
      Functions that is known input source, but not otherwise problem.
    </description>
    <tag>security</tag>
    <internalKey>readlink</internalKey>
    <severity>INFO</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>readdir</key>
    <name>readdir</name>
    <description>
      Functions that is known input source, but not otherwise problem.
    </description>
    <tag>security</tag>
    <internalKey>readdir</internalKey>
    <severity>INFO</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>fread</key>
    <name>fread</name>
    <description>
      Functions that is known input source, but not otherwise problem.
    </description>
    <tag>security</tag>
    <internalKey>fread</internalKey>
    <severity>INFO</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <rule>
    <key>_tscanf</key>
    <name>_tscanf</name>
    <description>
      Check to be sure that the format string passed as argument 2 to
      this function call does not come from an untrusted source that could
      have added formatting characters that the code is not prepared to
      handle. Additionally, the format string could contain `%s' without
      precision that could result in a buffer overflow.
    </description>
    <tag>security</tag>
    <internalKey>_tscanf</internalKey>
    <severity>MAJOR</severity>
    <type>CODE_SMELL</type>
    <remediationFunction>LINEAR</remediationFunction>
    <remediationFunctionGapMultiplier>5min</remediationFunctionGapMultiplier>
  </rule>
  <!-- end of update from RATS 2.4 rats-c.xml -->
  
</rules>
