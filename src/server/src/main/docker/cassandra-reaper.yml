
segmentCount: ${REAPER_SEGMENT_COUNT}
repairParallelism: ${REAPER_REPAIR_PARALELLISM}
repairIntensity: ${REAPER_REPAIR_INTENSITY}
scheduleDaysBetween: ${REAPER_SCHEDULE_DAYS_BETWEEN}
repairRunThreadCount: ${REAPER_REPAIR_RUN_THREADS}
hangingRepairTimeoutMins: ${REAPER_HANGING_REPAIR_TIMEOUT_MINS}
storageType: ${REAPER_STORAGE_TYPE}
enableCrossOrigin: ${REAPER_ENABLE_CROSS_ORIGIN}
incrementalRepair: ${REAPER_INCREMENTAL_REPAIR}
enableDynamicSeedList: ${REAPER_ENABLE_DYNAMIC_SEED_LIST}
repairManagerSchedulingIntervalSeconds: ${REAPER_REPAIR_MANAGER_SCHEDULING_INTERVAL_SECONDS}
jmxConnectionTimeoutInSeconds: ${REAPER_JMX_CONNECTION_TIMEOUT_IN_SECONDS}
useAddressTranslator: ${REAPER_USE_ADDRESS_TRANSLATOR}

# datacenterAvailability has three possible values: ALL | LOCAL | EACH
# the correct value to use depends on whether jmx ports to C* nodes in remote datacenters are accessible
# If the reaper has access to all node jmx ports, across all datacenters, then configure to ALL.
# If jmx access is only available to nodes in the same datacenter as reaper in running in, then configure to LOCAL.
# If there's a reaper instance running in every datacenter, and it's important that nodes under duress are not involved in repairs,
#    then configure to EACH.
#
# The default is ALL
datacenterAvailability: ${REAPER_DATACENTER_AVAILABILITY}


autoScheduling:
  enabled: ${REAPER_AUTO_SCHEDULING_ENABLED}
  initialDelayPeriod: ${REAPER_AUTO_SCHEDULING_INITIAL_DELAY_PERIOD}
  periodBetweenPolls: ${REAPER_AUTO_SCHEDULING_PERIOD_BETWEEN_POLLS}
  timeBeforeFirstSchedule: ${REAPER_AUTO_SCHEDULING_TIME_BEFORE_FIRST_SCHEDULE}
  scheduleSpreadPeriod: ${REAPER_AUTO_SCHEDULING_SCHEDULE_SPREAD_PERIOD}
  excludedKeyspaces: ${REAPER_AUTO_SCHEDULING_EXCLUDED_KEYSPACES}

jmxPorts: ${REAPER_JMX_PORTS}

jmxAuth:
  username: ${REAPER_JMX_AUTH_USERNAME}
  password: ${REAPER_JMX_AUTH_PASSWORD}

logging:
  level: ${REAPER_LOGGING_ROOT_LEVEL}
  loggers: ${REAPER_LOGGING_LOGGERS}
  appenders:
    - type: console
      logFormat: ${REAPER_LOGGING_APPENDERS_CONSOLE_LOG_FORMAT}
      threshold: ${REAPER_LOGGING_APPENDERS_CONSOLE_THRESHOLD}
    - type: file
      logFormat: ${REAPER_LOGGING_APPENDERS_FILE_LOG_FORMAT}
      currentLogFilename: /var/log/cassandra-reaper/reaper.log
      archivedLogFilenamePattern: /var/log/cassandra-reaper/reaper-%d.log.gz
      archivedFileCount: ${REAPER_LOGGING_APPENDERS_FILE_ARCHIVED_FILE_COUNT}

server:
  type: default
  applicationConnectors:
    - type: http
      port: ${REAPER_SERVER_APP_PORT}
      bindHost: ${REAPER_SERVER_APP_BIND_HOST}
  adminConnectors:
    - type: http
      port: ${REAPER_SERVER_ADMIN_PORT}
      bindHost: ${REAPER_SERVER_ADMIN_BIND_HOST}
  requestLog:
    appenders: []

