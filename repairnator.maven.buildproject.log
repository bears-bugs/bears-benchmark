Oct 01, 2018 2:34:11 AM com.gargoylesoftware.htmlunit.javascript.background.JavaScriptJobManagerImpl runSingleJob
SEVERE: Job run failed with unexpected RuntimeException: TypeError: Cannot call method "getAttribute" of undefined (script in http://localhost:39779/ from (6, 34) to (15, 12)#8)
======= EXCEPTION START ========
EcmaError: lineNumber=[8] column=[0] lineSource=[<no source>] name=[TypeError] sourceName=[script in http://localhost:39779/ from (6, 34) to (15, 12)] message=[TypeError: Cannot call method "getAttribute" of undefined (script in http://localhost:39779/ from (6, 34) to (15, 12)#8)]
com.gargoylesoftware.htmlunit.ScriptException: TypeError: Cannot call method "getAttribute" of undefined (script in http://localhost:39779/ from (6, 34) to (15, 12)#8)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.handleJavaScriptException(JavaScriptEngine.java:769)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$HtmlUnitContextAction.run(JavaScriptEngine.java:684)
	at net.sourceforge.htmlunit.corejs.javascript.Context.call(Context.java:602)
	at net.sourceforge.htmlunit.corejs.javascript.ContextFactory.call(ContextFactory.java:507)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.callFunction(JavaScriptEngine.java:616)
	at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.callFunction(JavaScriptEngine.java:591)
	at com.gargoylesoftware.htmlunit.html.HtmlPage.executeJavaScriptFunctionIfPossible(HtmlPage.java:985)
	at com.gargoylesoftware.htmlunit.javascript.background.JavaScriptFunctionJob.runJavaScript(JavaScriptFunctionJob.java:53)
	at com.gargoylesoftware.htmlunit.javascript.background.JavaScriptExecutionJob.run(JavaScriptExecutionJob.java:102)
	at com.gargoylesoftware.htmlunit.javascript.background.JavaScriptJobManagerImpl.runSingleJob(JavaScriptJobManagerImpl.java:328)
	at com.gargoylesoftware.htmlunit.javascript.background.DefaultJavaScriptExecutor.run(DefaultJavaScriptExecutor.java:162)
	at java.lang.Thread.run(Thread.java:745)
Caused by: net.sourceforge.htmlunit.corejs.javascript.EcmaError: TypeError: Cannot call method "getAttribute" of undefined (script in http://localhost:39779/ from (6, 34) to (15, 12)#8)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.constructError(ScriptRuntime.java:3603)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.constructError(ScriptRuntime.java:3587)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.typeError(ScriptRuntime.java:3608)
	at net.sourceforge.htmlunit.corejs.javascript.ScriptRuntime.typeError2(ScriptRuntime.java:362[INFO] 
-------------------------------------------------------
 J A S M I N E   S P E C S
-------------------------------------------------------
[INFO] 
first
  can pull out the first element of an array
  can perform OO-style "first()"
  can pass an index to first
  can pass an index to first
  can pass an index to first
  works on an arguments object.
  works well with _.map
  aliased as take
  handles nulls
  undefined

rest
  working rest()
  working rest(0)
  rest can take an index
  aliased as tail and works on arguments object
  works well with _.map
  aliased as drop and works on arguments object

initial
  working initial()
  initial can take an index
  initial works on arguments object
  initial works with _.map

last
  can pull out the last element of an array
  can pass an index to last
  can pass an index to last
  can pass an index to last
  works on an arguments object
  works well with _.map
  handles nulls
  undefined

compact
  can trim out all falsy values
  works on an arguments object

flatten
  can flatten nested arrays
  can shallowly flatten nested arrays
  works on an arguments object
  can shallowly flatten arrays containing only other arrays

without
  can remove all instances of an object
  works on an arguments object

uniq
  can find the unique values of an unsorted array
  can find the unique values of a sorted array faster
  can find the unique values of an array using a custom iterator
  can find the unique values of an array using a custom iterator without specifying whether array is sorted
  iterator works with sorted array
  works on an arguments object
  undefined
  undefined
  undefined
  undefined

intersection
  can take the set intersection of two arrays
  can perform an OO-style intersection
  works on an arguments object
  returns a duplicate-free array
  preserves order of first array
  returns an empty array when passed null as first argument
  returns an empty array when passed null as first argument
  returns an empty array when passed null as argument beyond the first
  returns an empty array when passed null as argument beyond the first

union
  takes the union of a list of arrays
  takes the union of a list of nested arrays
  takes the union of a list of arrays

difference
  takes the difference of two arrays
  takes the difference of three arrays

zip
  zipped together arrays of different lengths
  zipped pairs
  zipped pairs with empties
  unzipped empty

object

indexOf
  can compute indexOf, even without the native function
  works on an arguments object
  handles nulls properly
  35 is not in the list
  40 is in the list
  40 is in the list
  supports the fromIndex argument

lastIndexOf
  undefined
  can compute lastIndexOf, even without the native function
  lastIndexOf the other element
  works on an arguments object
  handles nulls properly
  supports the fromIndex argument

range
  range with 0 as a first argument generates an empty array
  range with a single positive argument generates an array of elements 0,1,2,...,n-1
  range with two arguments a &amp; b, a&lt;b generates an array of elements a,a+1,a+2,...,b-2,b-1
  range with two arguments a &amp; b, b&lt;a generates an empty array
  range with three arguments a &amp; b &amp; c, c &lt; b-a, a &lt; b generates an array of elements a,a+c,a+2c,...,b - (multiplier of a) &lt; c
  range with three arguments a &amp; b &amp; c, c &gt; b-a, a &lt; b generates an array with a single element, equal to a
  range with three arguments a &amp; b &amp; c, a &gt; b, c &lt; 0 generates an array of elements a,a-c,a-2c and ends with the number not less than b
  final example in the Python docs

map/flatten/reduce

select/reject/sortBy
  filtered and reversed the numbers

select/reject/sortBy in functional style
  filtered and reversed the numbers

reverse/concat/unshift/pop/map
  can chain together array functions.

chaining works in small stages
  undefined
  undefined

each
  each iterators provide value and iteration count
  each iterators provide value and iteration count
  each iterators provide value and iteration count
  context object property accessed
  aliased as "forEach"
  iterating over objects works, and ignores the object prototype.
  handles a null properly
  undefined
  undefined

map
  doubled numbers
  aliased as "collect"
  tripled numbers with context
  OO-style doubled numbers
  Can use collection methods on Array-likes.

reduce
  can sum up an array
  can reduce with a context object
  aliased as "inject"
  OO-style reduce
  default initial value
  can reduce via multiplication

reduceRight
  can perform right folds
  aliased as "foldr"
  default initial value
  default initial value on object
  undefined
  undefined

find
  should return first found `value`
  should return `undefined` if `value` is not found

detect
  found the first "2" and broke the loop

select
  selected each even number
  aliased as "filter"

reject
  rejected each even number
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  rejected each odd number

all

any

include

invoke
  first array sorted
  second array sorted

invoke w/ function reference
  first array sorted
  second array sorted

invoke when strings have a call method
  call function exists
  first array sorted
  second array sorted
  call function removed

pluck
  pulls names out of objects

where
  undefined
  undefined
  undefined
  undefined
  undefined

findWhere
  undefined
  undefined

max
  can perform a regular Math.max
  can perform a computation-based max
  Maximum value of an empty object
  Maximum value of an empty array
  Maximum value of a non-numeric collection
  Maximum value of a too-big array

min
  can perform a regular Math.min
  can perform a computation-based min
  Minimum value of an empty object
  Minimum value of an empty array
  Minimum value of a non-numeric collection
  undefined
  Minimum value of a too-big array

sortBy
  stooges sorted by age
  sortBy with undefined values
  sorted by length
  sortBy should be stable
  uses _.identity if iterator is not specified

groupBy
  put each even number in the right group
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined

indexBy
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined

countBy
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined
  undefined

sortedIndex
  35 should be inserted at index 3
  30 should be inserted at index 2
  undefined
  undefined
  undefined

shuffle
  original object is unmodified
  contains the same members before and after shuffle

sample
  contains the same members before and after sample
  also works when sampling more objects than are present
  sampling empty array with no number returns undefined
  sampling empty array with a number returns an empty array
  sampling an array with 0 picks returns an empty array
  sampling a negative number of picks returns an empty array

toArray
  cloned array contains same elements
  object flattened into array

size
  can compute the size of an object
  can compute the size of an array
  can compute the size of Array-likes
  can test the size of the arguments object
  can compute the size of a string literal
  can compute the size of string object
  handles nulls

partition
  handles bool return values
  handles 0 and 1 return values
  handles other numeric return values
  handles null return values
  handles undefined return values
  handles objects
  Default iterator
  Takes a string
  partition takes a context argument

bind
  can bind a function to a context
  can do OO-style binding
  can bind without specifying a context
  the function was partially applied in advance
  the function was completely applied in advance
  the function was partially applied in advance and can accept multiple arguments
  function should not be bound to the context, to comply with ECMAScript 5
  When called without the new operator, it's OK to be bound to the context

debounce

once
  undefined
  stores a memo to the last value

underscore tests
  each
  eachMap
  map
  mapMap
  reduce
  reduceRight
  foldl
  foldr
  contains
  find
  filter
  where
  first
  initial
  last
  flatten
  compact
  without
  max
  min
  shuffle
  sample
  pluck
  sortBy
  groupBy
  indexBy
  toArray
  size
  union
  intersection
  difference
  uniq
  zip
  object
  indexOf
  lastIndexOf
  sortedIndex
  range
  chain
  template
  template each
  template value
  template print
  chain

Results: 275 specs, 0 failures

[INFO] stopped o.e.j.s.h.ContextHandler{/,file:/root/workspace/javadev/underscore-java/435386942/}
[INFO] stopped o.e.j.s.h.ContextHandler{/spec,file:/root/workspace/javadev/underscore-java/435386942/}
[INFO] stopped o.e.j.s.h.ContextHandler{/src,file:/root/workspace/javadev/underscore-java/435386942/}
[INFO] 
[INFO] --- maven-jar-plugin:3.0.2:jar (default-jar) @ underscore ---
[INFO] Building jar: /root/workspace/javadev/underscore-java/435386942/target/underscore-1.37-SNAPSHOT.jar
[INFO] 
[INFO] --- maven-install-plugin:2.4:install (default-install) @ underscore ---
[INFO] Installing /root/workspace/javadev/underscore-java/435386942/target/underscore-1.37-SNAPSHOT.jar to /root/./workspace/javadev/underscore-java/435386942/.m2/com/github/javadev/underscore/1.37-SNAPSHOT/underscore-1.37-SNAPSHOT.jar
[INFO] Installing /root/workspace/javadev/underscore-java/435386942/pom.xml to /root/./workspace/javadev/underscore-java/435386942/.m2/com/github/javadev/underscore/1.37-SNAPSHOT/underscore-1.37-SNAPSHOT.pom
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 14.821 s
[INFO] Finished at: 2018-10-01T02:34:12+02:00
[INFO] Final Memory: 35M/705M
[INFO] ------------------------------------------------------------------------
