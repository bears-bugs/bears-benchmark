/**
 * Copyright 2015-2016 The OpenZipkin Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.twitter.zipkin.thriftjava;


import java.util.Map;
import java.util.HashMap;
import javax.annotation.Generated;
import org.apache.thrift.TEnum;

/**
 * A subset of thrift base types, except BYTES.
 */
@Generated("thrift")
public enum AnnotationType implements org.apache.thrift.TEnum {
  /**
   * Set to 0x01 when key is CLIENT_ADDR or SERVER_ADDR
   */
  BOOL(0),
  /**
   * No encoding, or type is unknown.
   */
  BYTES(1),
  I16(2),
  I32(3),
  I64(4),
  DOUBLE(5),
  /**
   * the only type zipkin v1 supports search against.
   */
  STRING(6);

  private final int value;

  private AnnotationType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static AnnotationType findByValue(int value) { 
    switch (value) {
      case 0:
        return BOOL;
      case 1:
        return BYTES;
      case 2:
        return I16;
      case 3:
        return I32;
      case 4:
        return I64;
      case 5:
        return DOUBLE;
      case 6:
        return STRING;
      default:
        return null;
    }
  }
}
