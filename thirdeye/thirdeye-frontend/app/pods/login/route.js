import Route from '@ember/routing/route';

import { get } from '@ember/object';
import { inject as service } from '@ember/service';
import UnauthenticatedRouteMixin from 'ember-simple-auth/mixins/unauthenticated-route-mixin';

export default Route.extend(UnauthenticatedRouteMixin, {
  session: service(),
  errorMessage: null,

  /**
   * Used to redirect to the old thirdeye app (search entry point)
   */
  queryParams: {
    fromUrl: {
      refreshModel: false,
      replace: false
    }
  },

  /**
   * The route to redirect to if already logged in
   * @override UnauthenticatedRouteMixin.routeIfAlreadyAuthenticated
   */
  routeIfAlreadyAuthenticated: 'rootcause',

  actions: {
    /**
     * Using will transition here because of errors generated by ember simple auth
     * when we use query-params with refreshModel
     */
    willTransition(transition) {
      const fromUrl = get(transition, 'intent.url');
      const isRedirectedToRca = fromUrl && fromUrl.startsWith('/rca');
      const isAuthenticated = this.get('session.isAuthenticated');

      if (isRedirectedToRca && !isAuthenticated) {
        transition.abort();
        this.transitionTo('login', { queryParams: { fromUrl } });
      } else {
        return true;
      }

    }
  }
});
