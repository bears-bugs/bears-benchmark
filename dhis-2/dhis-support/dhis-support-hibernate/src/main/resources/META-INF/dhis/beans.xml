<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

  <!-- Transactions -->

  <tx:annotation-driven transaction-manager="transactionManager" />

  <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory" />
    <property name="dataSource" ref="dataSource" />
  </bean>

  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager" />
  </bean>

  <!-- Configuration -->

  <bean id="cacheManager" class="org.hisp.dhis.cache.DefaultHibernateCacheManager">
    <property name="sessionFactory" ref="sessionFactory" />
  </bean>

  <bean id="dbmsManager" class="org.hisp.dhis.dbms.HibernateDbmsManager">
    <property name="jdbcTemplate" ref="jdbcTemplate" />
    <property name="sessionFactory" ref="sessionFactory" />
    <property name="cacheManager" ref="cacheManager" />
  </bean>

  <bean id="hibernateConfigurationProvider" class="org.hisp.dhis.hibernate.DefaultHibernateConfigurationProvider">
    <property name="configurationProvider" ref="dhisConfigurationProvider" />
  </bean>

  <bean id="hibernateMappingDirectoryLocations" class="org.hisp.dhis.hibernate.HibernateMappingDirectoryLocationsFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
  </bean>

  <bean id="hibernateMappingJarLocations" class="org.hisp.dhis.hibernate.HibernateMappingJarLocationsFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
  </bean>

  <bean id="hibernateProperties" class="org.hisp.dhis.hibernate.HibernatePropertiesFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
  </bean>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="hibernateProperties" ref="hibernateProperties" />
    <property name="mappingJarLocations" ref="hibernateMappingJarLocations" />
    <property name="mappingDirectoryLocations" ref="hibernateMappingDirectoryLocations" />
  </bean>

  <!-- Data source -->

  <bean id="dataSourceManager" class="org.hisp.dhis.datasource.DefaultDataSourceManager">
    <property name="config" ref="dhisConfigurationProvider" />
    <property name="mainDataSource" ref="dataSource" />
  </bean>

  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    <property name="driverClass" ref="driverClass" />
    <property name="jdbcUrl" ref="url" />
    <property name="user" ref="username" />
    <property name="password" ref="password" />
    <property name="maxPoolSize" ref="maxPoolSize" />
    <property name="acquireIncrement" value="6" />
    <property name="maxIdleTime" value="21600" />
  </bean>
  
  <bean id="readOnlyDataSource" class="org.hisp.dhis.datasource.ReadOnlyDataSourceFactoryBean">
    <property name="dataSourceManager" ref="dataSourceManager" />
  </bean>

  <bean id="jdbcTemplate" primary="true" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource" />
    <property name="fetchSize" value="1000" />
  </bean>

  <bean id="readOnlyJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="readOnlyDataSource" />
    <property name="fetchSize" value="1000" />
  </bean>

  <bean id="driverClass" class="org.hisp.dhis.hibernate.ConnectionPropertyFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
    <property name="hibernateProperty" value="hibernate.connection.driver_class" />
  </bean>

  <bean id="url" class="org.hisp.dhis.hibernate.ConnectionPropertyFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
    <property name="hibernateProperty" value="hibernate.connection.url" />
  </bean>

  <bean id="username" class="org.hisp.dhis.hibernate.ConnectionPropertyFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
    <property name="hibernateProperty" value="hibernate.connection.username" />
  </bean>

  <bean id="password" class="org.hisp.dhis.hibernate.ConnectionPropertyFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
    <property name="hibernateProperty" value="hibernate.connection.password" />
  </bean>

  <bean id="maxPoolSize" class="org.hisp.dhis.hibernate.ConnectionPropertyFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
    <property name="hibernateProperty" value="hibernate.c3p0.max_size" />
    <property name="defaultValue" value="40" />
  </bean>

  <bean id="encryptionPassword" class="org.hisp.dhis.hibernate.ConnectionPropertyFactoryBean">
    <property name="hibernateConfigurationProvider" ref="hibernateConfigurationProvider" />
    <property name="hibernateProperty" value="encryption.password" />
    <property name="defaultValue" value="J7GhAs287hsSQlKd9g5" />
  </bean>

  <!-- Encryption -->

  <!-- Bouncy Castle JCE SecurityProvider -->

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="java.security.Security.addProvider" />
    <property name="arguments">
      <list>
        <bean class="org.bouncycastle.jce.provider.BouncyCastleProvider" />
      </list>
    </property>
  </bean>

  <!-- Used only for SystemSettings (due to bug with JCE policy restrictions in Jasypt) -->

  <bean id="tripleDesStringEncryptor" class="org.jasypt.encryption.pbe.PooledPBEStringEncryptor">
    <property name="algorithm" value="PBEWithSHA1AndDESede" />
    <property name="password" ref="encryptionPassword" />
    <property name="poolSize" value="4" />
    <property name="saltGenerator">
      <bean class="org.jasypt.salt.StringFixedSaltGenerator">
        <constructor-arg type="java.lang.String" value="H7g0oLkEw3wf52fs52g3hbG" />
      </bean>
    </property>
  </bean>

  <!-- AES string encryptor, requires BouncyCastle and JCE extended policy (due to issue mentioned above) -->

  <!-- Encryptors -->

  <bean id="aes128StringEncryptor" class="org.jasypt.encryption.pbe.PooledPBEStringEncryptor">
    <property name="algorithm" value="PBEWITHSHA256AND128BITAES-CBC-BC" />
    <property name="password" ref="encryptionPassword" />
    <property name="poolSize" value="4" />
    <property name="saltGenerator">
      <bean class="org.jasypt.salt.RandomSaltGenerator" />
    </property>
  </bean>

  <bean id="hibernateEncryptors" class="org.hisp.dhis.hibernate.encryption.HibernateEncryptorRegistry">
    <property name="encryptors">
      <map>
        <entry key="aes128StringEncryptor" value-ref="aes128StringEncryptor" />
      </map>
    </property>
  </bean>

</beans>
