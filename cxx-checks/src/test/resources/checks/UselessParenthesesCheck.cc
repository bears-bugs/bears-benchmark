class Foo {
    void foo() {
        return 3;             // Compliant
        return (x);           // Non-Compliant
        return (x + 1);       // Non-Compliant
        int x = (y / 2 + 1);  // Ignore initializerClause rule tokenValue='('
        int y = (4 + X) * y;    // Compliant
        if (0) {              // Compliant
        }
#define MY_MACRO(z) ((z)*(z))
        return MY_MACRO(x);   // Compliant, ignore the parenthesis generated by a macro
    }
};
