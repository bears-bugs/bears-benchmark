apiVersion: v1
kind: Template
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: enmasse
    name: keycloak-pvc
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${KEYCLOAK_STORAGE_CAPACITY}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
    name: keycloak
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: enmasse
          name: keycloak
      spec:
        containers:
        - env:
          - name: JAVA_OPTS
            value: -Dvertx.cacheDirBase=/tmp -Djboss.bind.address=0.0.0.0 -Djava.net.preferIPv4Stack=true
              -Xms512m -Xmx1024m
          - name: KEYCLOAK_USER
            valueFrom:
              secretKeyRef:
                key: admin.username
                name: ${KEYCLOAK_SECRET_NAME}
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin.password
                name: ${KEYCLOAK_SECRET_NAME}
          image: ${STANDARD_AUTHSERVICE_IMAGE}
          livenessProbe:
            httpGet:
              path: /auth
              port: https
              scheme: HTTPS
            initialDelaySeconds: 120
          name: keycloak
          ports:
          - containerPort: 5671
            name: amqps
          - containerPort: 8443
            name: https
          readinessProbe:
            httpGet:
              path: /auth
              port: https
              scheme: HTTPS
            initialDelaySeconds: 120
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 2Gi
          volumeMounts:
          - mountPath: /opt/jboss/keycloak/providers
            name: keycloak-providers
            readOnly: false
          - mountPath: /opt/jboss/keycloak/standalone/configuration
            name: keycloak-configuration
            readOnly: false
          - mountPath: /opt/enmasse/cert
            name: ${KEYCLOAK_CERT_SECRET_NAME}
            readOnly: false
          - mountPath: /opt/jboss/keycloak/standalone/data
            name: keycloak-persistence
            readOnly: false
        initContainers:
        - env:
          - name: KEYCLOAK_DIR
            value: /opt/jboss/keycloak
          image: ${KEYCLOAK_PLUGIN_IMAGE}
          name: keycloak-plugin
          volumeMounts:
          - mountPath: /opt/jboss/keycloak/providers
            name: keycloak-providers
            readOnly: false
          - mountPath: /opt/jboss/keycloak/standalone/configuration
            name: keycloak-configuration
            readOnly: false
          - mountPath: /opt/enmasse/cert
            name: ${KEYCLOAK_CERT_SECRET_NAME}
            readOnly: false
        volumes:
        - name: ${KEYCLOAK_CERT_SECRET_NAME}
          secret:
            secretName: ${KEYCLOAK_CERT_SECRET_NAME}
        - name: keycloak-persistence
          persistentVolumeClaim:
            claimName: keycloak-pvc
        - emptyDir: {}
          name: keycloak-configuration
        - emptyDir: {}
          name: keycloak-providers
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
    name: keycloak-controller
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: enmasse
          name: keycloak-controller
      spec:
        containers:
        - env:
          - name: KEYCLOAK_HOSTNAME
            valueFrom:
              configMapKeyRef:
                key: hostname
                name: ${KEYCLOAK_CONTROLLER_CONFIGMAP_NAME}
          - name: KEYCLOAK_PORT
            valueFrom:
              configMapKeyRef:
                key: port
                name: ${KEYCLOAK_CONTROLLER_CONFIGMAP_NAME}
          - name: KEYCLOAK_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin.username
                name: ${KEYCLOAK_SECRET_NAME}
          - name: KEYCLOAK_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin.password
                name: ${KEYCLOAK_SECRET_NAME}
          - name: KEYCLOAK_CERT
            valueFrom:
              secretKeyRef:
                key: tls.crt
                name: ${KEYCLOAK_CERT_SECRET_NAME}
          image: ${KEYCLOAK_CONTROLLER_IMAGE}
          name: keycloak-controller
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 256Mi
- apiVersion: v1
  data:
    hostname: standard-authservice
    port: '8443'
  kind: ConfigMap
  metadata:
    labels:
      app: enmasse
    name: keycloak-controller-config
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: enmasse
    name: standard-authservice
  spec:
    ports:
    - name: amqps
      port: 5671
      protocol: TCP
      targetPort: amqps
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
    selector:
      name: keycloak
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: enmasse
    name: keycloak
  spec:
    host: ${KEYCLOAK_ROUTE_HOSTNAME}
    port:
      targetPort: https
    tls:
      termination: passthrough
    to:
      kind: Service
      name: standard-authservice
parameters:
- description: The docker image to use for the keycloak plugin image
  name: KEYCLOAK_PLUGIN_IMAGE
  value: docker.io/enmasseproject/keycloak-plugin:latest
- description: The docker image to use for the 'standard' auth service
  name: STANDARD_AUTHSERVICE_IMAGE
  value: jboss/keycloak-openshift:3.3.0.Final
- description: The secret where keycloak credentials are stored
  name: KEYCLOAK_SECRET_NAME
  value: keycloak-credentials
- description: The docker image to use for the keycloak controller
  name: KEYCLOAK_CONTROLLER_IMAGE
  value: docker.io/enmasseproject/keycloak-controller:latest
- description: The configmap used to configure the keycloak controller
  name: KEYCLOAK_CONTROLLER_CONFIGMAP_NAME
  value: keycloak-controller-config
- description: The secret containing the tls certificate and key
  name: KEYCLOAK_CERT_SECRET_NAME
  value: standard-authservice-cert
- description: The hostname to use for the public keycloak route
  name: KEYCLOAK_ROUTE_HOSTNAME
  value: ''
- description: The amount of storage to request for Keycloak data
  name: KEYCLOAK_STORAGE_CAPACITY
  value: 2Gi
